#include "shop.h"

using namespace std;
Shop::Shop(int w, int h, const vector<string> MenuItems):
    Menu(w,h,MenuItems),
    m_bonuses(),
    m_w(w),
    m_h(h),
    m_gold(0)
{
    for(unsigned int i = 0; i<m_items.size()-1;i++) {
        m_text.push_back(sf::Text());
    }
    for(unsigned int i = 0; i<m_text.size();i++) {
        m_text[i].setFont(m_font);
        m_text[i].setPosition(sf::Vector2f((m_w/2)-75,m_items[i].second.getGlobalBounds().top));
        m_text[i].setString(bonusString[i]);
    }
    for(unsigned int i = 0; i<m_prix.size();i++) {
        m_prix[i] = 100;
    }


}
void Shop::setBonuses(vector<AnimatedGraphicElement> bonuses) {
    m_bonuses = bonuses;
    for(unsigned int i = 0; i<m_bonuses.size(); i++) {
        m_bonuses[i].setPosition(sf::Vector2f((m_w/2)-125,m_items[i].second.getGlobalBounds().top));
    }
}

void Shop::draw(sf::RenderWindow *window) {
    Menu::draw(window);
    for(auto x : m_bonuses)
        x.draw(window);
    int i = 0;
    for (auto x : m_text) {
        x.setString(x.getString() + "  " + std::to_string(m_prix[i]) + "g");
        window->draw(x);
        i++;
    }
}

void Shop::setGold(int gold) {
    m_gold = gold;
}

void Shop::setSavedParam(array<int, 10> param) {
    m_parametres = param;

    //MaxLife prices changes, function of m_savedParam
    switch(m_parametres[0]) {
    case 100:
        m_prix[0] = 50;
        break;
    case 125:
        m_prix[0]+=m_prix[0]*0.5;
        break;
    case 150:
        m_prix[0]+=m_prix[0];
        break;
    case 200:
        m_prix[0]=-1;
        break;
    }

    //Heal prices changes, function of m_savedParam
    switch(m_parametres[1]) {
    case 20:
        m_prix[1] = 50;
        break;
    case 30:
        m_prix[1]+=m_prix[0]*0.5;
        break;
    case 40:
        m_prix[1]+=m_prix[0];
        break;
    case 50:
        m_prix[1]=-1;
        break;
    }

    //Jump prices changes, function of m_savedParam
    switch(m_parametres[2]) {
    case 2:
        m_prix[2] = 100;
        break;
    case 3:
        m_prix[2]+=m_prix[0]*0.5;
        break;
    case 4:
        m_prix[1]=-1;
        break;
    }

    //Invincibility prices changes, function of m_savedParam
    switch(m_parametres[3]) {
    case 2:
        m_prix[3] = 100;
        break;
    case 3:
        m_prix[3]+=m_prix[3]*0.5;
        break;
    case 4:
        m_prix[1]=-1;
        break;
    }

    //Multiplier prices changes, function of m_savedParam
    switch(m_parametres[4]) {
    case 2:
        m_prix[4] = 100;
        break;
    case 3:
        m_prix[4]+=m_prix[4]*0.5;
        break;
    case 4:
        m_prix[1]=-1;
        break;
    }
}

void Shop::update(int i) {
}
